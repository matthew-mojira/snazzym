#lang snazzym

(global pass int)
(global fail int)

(func (init int ())
  (zero! pass)
  (zero! fail)

  (cond
    [(= 2 2)
      ((set! pass 3)
       (return 1)
       (return 2)
       (return 1))]
    [(= 5 5)
      ((set! fail 3)
       (return 1)
       (return 2)
       (return 1))]

       )
;    [(= 10 10) ((inc! pass)
;      (return 2))])
;
;  (if (and (= 1 1) (= 1 1))
;    (inc! pass))
;  (if (and (= 1 1) (!= 1 1))
;    (inc! fail))
;  (if (and (!= 1 1) (= 1 1))
;    (inc! fail))
;  (if (and (!= 1 1) (!= 1 1))
;    (inc! fail))
;  (if (or (= 1 1) (= 1 1))
;    (inc! pass))
;  (if (or (= 1 1) (!= 1 1))
;    (inc! pass))
;  (if (or (!= 1 1) (= 1 1))
;    (inc! pass))
;  (if (or (!= 1 1) (!= 1 1))
;    (inc! fail))
;
;  (if (= 10 10)
;    (inc! pass))
;  (if (= 10 20)
;    (inc! fail))
;  (if (!= 10 10)
;    (inc! fail))
;  (if (!= 10 20)
;    (inc! pass))
;
;  (if (< 10 10)
;    (inc! fail))
;  (if (< 10 5)
;    (inc! fail))
;  (if (< 5 10)
;    (inc! pass))
;  (if (<= 10 10)
;    (inc! pass))
;  (if (<= 10 5)
;    (inc! fail))
;  (if (<= 5 10)
;    (inc! pass))
;
;  (if (> 10 10)
;    (inc! fail))
;  (if (> 10 5)
;    (inc! pass))
;  (if (> 5 10)
;    (inc! fail))
;  (if (>= 10 10)
;    (inc! pass))
;  (if (>= 10 5)
;    (inc! pass))
;  (if (>= 5 10)
;    (inc! fail))

;  (return ())
)
(func (vblank void ()) (return ()))
(func (main void ()) (return ()))
